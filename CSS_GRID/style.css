*{
    margin: 0; 
    padding: 0;
    box-sizing: border-box;
}
/*
margin: 0; --> zerando a margin
padding: 0; --> zerando o padding
box-sizing: border-box; --> fazendo o elementos ficarem com o tamanho definido
*/
.container{
    border: 2px solid blue;
    margin: 8px;
    gap: 8px;

    display: grid;
    /*grid-template-columns: 80px 80px 80px;*/
    /*grid-template-columns: 1fr 1fr 1fr;*/
    /*grid-template-columns: minmax(0, 1fr) minmax(400px, 1fr);*/
    /*grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));*/
    /*grid-template-columns: repeat(4, minmax(200px, 1fr))*/
    /*grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));*/
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));

    /*grid-template-rows: auto 200px;*/
    /*grid-auto-rows: 100px;*/
}

/*
grid-auto-rows: 100px; --> Todas lilhas tem o mesmo tamanho

repeat(auto-fill, minmax(100px, 1fr)) --> vai autmaticamente preechendo espaço da tela

repeat(4, minmax(200px, 1fr)) --> quantidade de colunas e o mínimo e maximo

repeat(auto-fit, minmax(200px, 1fr)); --> automatimente com base no espaço da tela vai se encachando e quando passar do
no mínimo vai para próxima linha

minmax(0, 1fr) minmax(200px, 1fr, 1fr) --> minimo e maximo de tamanho

1fr 1f 1fr --. dividir em fração porporcional
grid-template-columns --> terá três colunas com 80px
display: grid;
gap: 8px; --> espaçamento entre os elementos
*/

@media screen and (max-widh: 720px){
    .container{
        grid-template-columns: repeat(3, 1fr);
    }
}

@media screen and (max-widh: 520px){
    .container{
        grid-template-columns: repeat(1, 1fr);
    }
}

/*
Media query, nada mais é do que uma estrutura do CSS que permite aplicar 
estilizações especificas para uma página web de acordo com certas condições, 
fazendo assim com esta página possa se adequar ao layout de tela em diferentes 
tamanhos e tipos de mídia.
*/


.item{
    background-color: green;
}